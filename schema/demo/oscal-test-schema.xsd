<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:oscal-test="urn:fakeup"
           xmlns:oscal-prose="urn:fakeup"
           elementFormDefault="qualified"
           targetNamespace="urn:fakeup">
   <xs:element name="acquired-model">
      <xs:annotation>
         <xs:documentation>
            <b/>
         </xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="oscal-test:acquired-field"/>
            <xs:group ref="oscal-test:prose" maxOccurs="unbounded" minOccurs="0"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>
   <xs:element name="acquired-field">
      <xs:annotation>
         <xs:documentation>
            <b/>
         </xs:documentation>
      </xs:annotation>
      <xs:complexType mixed="true">
         <xs:group ref="oscal-test:everything-inline"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="kit">
      <xs:annotation>
         <xs:documentation>
            <b/>
         </xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element minOccurs="0" ref="oscal-test:another-thing"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="oscal-test:thing"/>
         </xs:sequence>
         <xs:attribute name="id" type="xs:ID" use="required"/>
         <xs:attribute name="some_string" type="xs:string" use="required"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="another-thing">
      <xs:annotation>
         <xs:documentation>
            <b/>
         </xs:documentation>
      </xs:annotation>
      <xs:complexType mixed="true"/>
   </xs:element>
   <xs:element name="thing">
      <xs:annotation>
         <xs:documentation>
            <b/>
         </xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element minOccurs="1" ref="oscal-test:single-required-field"/>
            <xs:element minOccurs="0" ref="oscal-test:acquired-model"/>
            <xs:element minOccurs="1" ref="oscal-test:single-mixed-field"/>
            <xs:element minOccurs="0" ref="oscal-test:boolean_field"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="oscal-test:plural-field"/>
            <xs:element maxOccurs="unbounded"
                        minOccurs="0"
                        ref="oscal-test:plural-mixed-field"/>
            <xs:element maxOccurs="unbounded"
                        minOccurs="0"
                        ref="oscal-test:plural-flagged-mixed"/>
            <xs:element minOccurs="0" ref="oscal-test:single-chunk"/>
            <xs:element maxOccurs="unbounded"
                        minOccurs="0"
                        ref="oscal-test:chunk-among-chunks"/>
            <xs:choice>
               <xs:element minOccurs="0" ref="oscal-test:vanilla"/>
               <xs:element minOccurs="0" ref="oscal-test:chocolate"/>
            </xs:choice>
         </xs:sequence>
         <xs:attribute name="id" type="xs:ID" use="required"/>
         <xs:attribute name="some_string" type="xs:string" use="required"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="single-required-field">
      <xs:annotation>
         <xs:documentation>
            <b/>
         </xs:documentation>
      </xs:annotation>
      <xs:complexType mixed="true"/>
   </xs:element>
   <xs:element name="single-mixed-field">
      <xs:annotation>
         <xs:documentation>
            <b/>
         </xs:documentation>
      </xs:annotation>
      <xs:complexType mixed="true">
         <xs:group ref="oscal-test:everything-inline"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="plural-field">
      <xs:annotation>
         <xs:documentation>
            <b/>
         </xs:documentation>
      </xs:annotation>
      <xs:complexType mixed="true"/>
   </xs:element>
   <xs:element name="plural-mixed-field">
      <xs:annotation>
         <xs:documentation>
            <b/>
         </xs:documentation>
      </xs:annotation>
      <xs:complexType mixed="true"/>
   </xs:element>
   <xs:element name="plural-flagged-mixed">
      <xs:annotation>
         <xs:documentation>
            <b/>
         </xs:documentation>
      </xs:annotation>
      <xs:complexType mixed="true">
         <xs:attribute name="some_string" type="xs:string"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="single-chunk">
      <xs:annotation>
         <xs:documentation>
            <b/>
         </xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element minOccurs="1" ref="oscal-test:single-required-field"/>
            <xs:group ref="oscal-test:prose" maxOccurs="unbounded" minOccurs="0"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>
   <xs:element name="chunk-among-chunks">
      <xs:annotation>
         <xs:documentation>
            <b/>
         </xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element minOccurs="1" ref="oscal-test:single-required-field"/>
            <xs:group ref="oscal-test:prose" maxOccurs="unbounded" minOccurs="0"/>
         </xs:sequence>
         <xs:attribute name="boolean_flag" type="xs:string"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="vanilla">
      <xs:annotation>
         <xs:documentation>
            <b/>
         </xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element minOccurs="1" ref="oscal-test:single-required-field"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>
   <xs:element name="chocolate">
      <xs:annotation>
         <xs:documentation>
            <b/>
         </xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element minOccurs="1" ref="oscal-test:single-required-field"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>
   <xs:element name="boolean_field" type="xs:boolean">
      <xs:annotation>
         <xs:documentation>
            <b/>
         </xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:group name="prose">
      <xs:choice>
         <xs:element ref="oscal-prose:h1"/>
         <xs:element ref="oscal-prose:h2"/>
         <xs:element ref="oscal-prose:h3"/>
         <xs:element ref="oscal-prose:h4"/>
         <xs:element ref="oscal-prose:h5"/>
         <xs:element ref="oscal-prose:h6"/>
         <xs:element ref="oscal-prose:p"/>
         <xs:element ref="oscal-prose:ul"/>
         <xs:element ref="oscal-prose:ol"/>
         <xs:element ref="oscal-prose:pre"/>
         <xs:element ref="oscal-prose:table"/>
      </xs:choice>
   </xs:group>
   <xs:element name="h1">
      <xs:complexType mixed="true">
         <xs:group ref="oscal-prose:inlines"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="h2">
      <xs:complexType mixed="true">
         <xs:group ref="oscal-prose:inlines"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="h3">
      <xs:complexType mixed="true">
         <xs:group ref="oscal-prose:inlines"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="h4">
      <xs:complexType mixed="true">
         <xs:group ref="oscal-prose:inlines"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="h5">
      <xs:complexType mixed="true">
         <xs:group ref="oscal-prose:inlines"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="h6">
      <xs:complexType mixed="true">
         <xs:group ref="oscal-prose:inlines"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="p">
      <xs:complexType mixed="true">
         <xs:group ref="oscal-prose:everything-inline"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="pre">
      <xs:complexType mixed="true">
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="oscal-prose:mix"/>
            <xs:element ref="oscal-prose:a"/>
         </xs:choice>
         <xs:attributeGroup ref="oscal-prose:optionalClass"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="ol">
      <xs:complexType>
         <xs:sequence>
            <xs:element maxOccurs="unbounded" ref="oscal-prose:li"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>
   <xs:element name="li">
      <xs:complexType mixed="true">
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="oscal-prose:everything-inline"/>
            <xs:element ref="oscal-prose:ol"/>
            <xs:element ref="oscal-prose:ul"/>
         </xs:choice>
         <xs:attributeGroup ref="oscal-prose:optionalClass"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="ul">
      <xs:complexType>
         <xs:sequence>
            <xs:element maxOccurs="unbounded" ref="oscal-prose:li"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>
   <xs:element name="table">
      <xs:complexType>
         <xs:sequence>
            <xs:element maxOccurs="unbounded" ref="oscal-prose:tr"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>
   <xs:element name="tr">
      <xs:complexType>
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element maxOccurs="unbounded" ref="oscal-prose:td"/>
            <xs:element maxOccurs="unbounded" ref="oscal-prose:th"/>
         </xs:choice>
      </xs:complexType>
   </xs:element>
   <xs:element name="th">
      <xs:complexType mixed="true">
         <xs:group ref="oscal-prose:everything-inline"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="td">
      <xs:complexType mixed="true">
         <xs:group ref="oscal-prose:everything-inline"/>
      </xs:complexType>
   </xs:element>
   <xs:group name="everything-inline">
      <xs:sequence>
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="oscal-prose:mix"/>
            <xs:group ref="oscal-prose:special"/>
            <xs:element ref="oscal-prose:a"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <xs:group name="mix">
      <xs:sequence>
         <xs:group minOccurs="0" maxOccurs="unbounded" ref="oscal-prose:inlines"/>
      </xs:sequence>
   </xs:group>
   <xs:group name="inlines">
      <xs:sequence>
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="oscal-prose:q"/>
            <xs:element ref="oscal-prose:code"/>
            <xs:element ref="oscal-prose:em"/>
            <xs:element ref="oscal-prose:i"/>
            <xs:element ref="oscal-prose:strong"/>
            <xs:element ref="oscal-prose:b"/>
            <xs:element ref="oscal-prose:sub"/>
            <xs:element ref="oscal-prose:sup"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <xs:element name="q">
      <xs:complexType mixed="true">
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="oscal-prose:code"/>
            <xs:element ref="oscal-prose:em"/>
            <xs:element ref="oscal-prose:i"/>
            <xs:element ref="oscal-prose:b"/>
            <xs:element ref="oscal-prose:strong"/>
            <xs:element ref="oscal-prose:sub"/>
            <xs:element ref="oscal-prose:sup"/>
         </xs:choice>
      </xs:complexType>
   </xs:element>
   <xs:element name="code">
      <xs:complexType mixed="true">
         <xs:group ref="oscal-prose:mix"/>
         <xs:attributeGroup ref="oscal-prose:optionalClass"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="strong">
      <xs:complexType mixed="true">
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="oscal-prose:mix"/>
            <xs:element ref="oscal-prose:a"/>
         </xs:choice>
         <xs:attributeGroup ref="oscal-prose:optionalClass"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="em">
      <xs:complexType mixed="true">
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="oscal-prose:mix"/>
            <xs:element ref="oscal-prose:a"/>
         </xs:choice>
         <xs:attributeGroup ref="oscal-prose:optionalClass"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="i">
      <xs:complexType mixed="true">
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="oscal-prose:mix"/>
            <xs:element ref="oscal-prose:a"/>
         </xs:choice>
         <xs:attributeGroup ref="oscal-prose:optionalClass"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="b">
      <xs:complexType mixed="true">
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="oscal-prose:mix"/>
            <xs:element ref="oscal-prose:a"/>
         </xs:choice>
         <xs:attributeGroup ref="oscal-prose:optionalClass"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="sub">
      <xs:complexType mixed="true">
         <xs:attributeGroup ref="oscal-prose:optionalClass"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="sup">
      <xs:complexType mixed="true">
         <xs:attributeGroup ref="oscal-prose:optionalClass"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="a">
      <xs:complexType mixed="true">
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="oscal-prose:q"/>
            <xs:element ref="oscal-prose:code"/>
            <xs:element name="em">
               <xs:complexType mixed="true">
                  <xs:attributeGroup ref="oscal-prose:optionalClass"/>
               </xs:complexType>
            </xs:element>
         </xs:choice>
         <xs:attribute name="href"/>
      </xs:complexType>
   </xs:element>
   <xs:group name="special">
      <xs:sequence>
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="oscal-prose:insert"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <xs:element name="insert">
      <xs:complexType>
         <xs:attribute name="param-id" use="required" type="xs:IDREF"/>
      </xs:complexType>
   </xs:element>
   <xs:attributeGroup name="requiredClass">
      <xs:attribute name="class" use="required"/>
   </xs:attributeGroup>
   <xs:attributeGroup name="optionalClass">
      <xs:attribute name="class"/>
   </xs:attributeGroup>
   <xs:attributeGroup name="hrefAttr">
      <xs:attribute name="href"/>
   </xs:attributeGroup>
</xs:schema>

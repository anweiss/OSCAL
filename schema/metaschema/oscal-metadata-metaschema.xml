<?xml version="1.0" encoding="UTF-8"?>
<!-- OSCAL CATALOG METASCHEMA -->
<!-- validate with XSD and Schematron (linked) -->
<?xml-model href="../../build/metaschema/lib/metaschema-check.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<?xml-stylesheet type="text/xsl" href="metaschema-browser.xsl"?>
<?xml-stylesheet type="text/css" href="../../build/metaschema/lib/metaschema-author.css"?>
<METASCHEMA xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://csrc.nist.gov/ns/oscal/metaschema/1.0 ../../build/metaschema/lib/metaschema.xsd"
 xmlns="http://csrc.nist.gov/ns/oscal/metaschema/1.0" xmlns:o="http://csrc.nist.gov/ns/oscal/1.0"
 root="metadata">

  <schema-name>OSCAL Document Metadata Description</schema-name>
  <short-name>oscal-metadata</short-name>
  <namespace>http://csrc.nist.gov/ns/oscal/metadata/1.0/</namespace>
  
  <define-assembly name="metadata">
    <formal-name>Publication metadata</formal-name>
    <description>Information describing the publication or availability of this document</description>
    <model>
      <field      named="title"    required="yes"/>
      <fields     named="author"   group-as="authors"/>
      <field      named="publication-date"/>
      <field      named="version"/>
      <fields     named="doc-id"   group-as="document-identifiers"/>
      <fields     named="prop"     group-as="properties"/>
      <fields     named="hlink"    group-as="hashed-links"/>
      <assemblies named="resource" group-as="resources"/>
      <assemblies named="role"     group-as="roles"/>
      <assemblies named="party"    group-as="parties"/>
      <assembly   named="notes"/>
      <assembly   named="extra-meta"/>
    </model>
  </define-assembly>

  <define-field name="title">
    <formal-name>Title</formal-name>
    <description>The title under which this document is formally published</description>
  </define-field>

  <define-field name="author" group-as="authors">
    <formal-name>Author</formal-name>
    <description>A named author</description>
    <remarks><p>Note this information may be duplicative of information given in a <code>party</code>
    element with appropriate <code>role-id</code> flags, along with more a more complete structured
    listing. This element provides a value for display as well as an additional point of comparison.</p></remarks>
  </define-field>
  
  
  <define-field name="publication-date">
    <formal-name>Publication date</formal-name>
    <description>The official date of publication</description>
  </define-field>

  <define-field name="version">
    <flag name="iso-date"/>
    <formal-name>version</formal-name>
    <description>Version information</description>
  </define-field>
  
  <define-flag name="iso-date" datatype="date">
    <formal-name>ISO (standard) date</formal-name>
    <description>Please use YYYY-MM-DD syntax.</description>
    <remarks>
      <p>The syntax may be validated in back. The date given should presumably be the same as the
        (human-readable) <code>date</code> given above it (and such a discrepancy is also be
        detectable).</p>
    </remarks>
  </define-flag>

  <define-field name="doc-id" group-as="document-identifiers">
    <flag name="type"/>
    <formal-name>Document Identifier</formal-name>
    <description>Any sort of document identifier, name, code, path or other indicator of where and how this document
      may be located, compared or validated. Given appropriate qualification via its <code>type</code> and <code>rel</code>, this value may point to <q>the same</q> or <q>another version</q> of the document.</description>
    <remarks>
      <p>Flags <code>rel</code> and <code>type</code> can qualify the kind and use of document identifier, in particular whether the value is to be attributed to the given instance, or to another instance, source or resource.</p>
      <p>Specific usage rules, nomenclatures and recognized file types e.g. DOIs, CMS locators, etc
        etc., may be defined at application level. The value of this field may also be a hash or check sum.</p>
    </remarks>
  </define-field>

  <define-flag name="type" datatype="string">
    <formal-name>Type</formal-name>
    <description>Indicating the type of identifier or other data item.</description>
    <remarks><p>Generally, this flag is used to relate to schemes and taxonomies defined outside the OSCAL application in some public form; i.e. they can be looked up.</p></remarks>
  </define-flag>

  <define-field name="prop" group-as="properties">
    <flag name="class"/>
    <formal-name>Property</formal-name>
    <description>A property associated with the document</description>
    <remarks><p>Wherever permitted, a <code>doc-id</code> should be used in preference to this field when the property is a document identifer of any kind.</p></remarks>
  </define-field>

  <define-flag name="class" datatype="string">
    <formal-name>Classification</formal-name>
    <description>Indicating the property being assigned</description>
  </define-flag>
  

  <define-assembly name="party" group-as="parties">
    <flag name="id" datatype="ID"/>
    <flag name="role-id"/>
    <formal-name>Party (organization or person)</formal-name>
    <description>A responsible entity, either singular (an organization or person) or collective (multiple persons)</description>
    <remarks>
      <p>As contents one of <code>org</code> or <code>person</code> is required, or both; there may be only one <code>org</code>, but many <code>person</code>s.</p>
      <p>Note that persons can also be indicated with organizational affiliations by using
        <code>orgname</code> inside <code>person</code>. Contact information in that
        case belongs to the person, not the organization: use <code>org</code> when an
      organization as such serves as a documented party.</p>
    </remarks>
    <model>
      <assemblies named="person" group-as="persons"/>
      <assembly named="org"/>
      <assembly named="notes"/>
    </model>
  </define-assembly>
  
  <define-assembly name="person" group-as="persons">
    <formal-name>Person</formal-name>
    <description>A person, with contact information</description>
    <model>
      <field    named="person-name"/>
      <field    named="short-name"/>
      <field    named="org-name">
        <description>Affiliated organization</description>
      </field>
      <fields   named="person-id" group-as="person-identifiers"/>
      <fields   named="org-id"    group-as="organization-identifiers"/>
      <assembly named="address"/>
      <fields   named="email" group-as="email-addresses"/>
      <fields   named="phone" group-as="telephone-numbers"/>
      <fields   named="url"   group-as="URLs"/>
      <assembly named="notes"/>
    </model>
  </define-assembly>
  
  <define-assembly name="org">
    <formal-name>Organization</formal-name>
    <description>An organization or legal entity (not a person), with contact information</description>
    <model>
      <field    named="org-name"/>
      <field    named="short-name"/>
      <fields   named="org-id" group-as="organization-identifiers"/>
      <assembly named="address"/>
      <fields   named="email" group-as="email-addresses"/>
      <fields   named="phone" group-as="telephone-numbers"/>
      <fields   named="url" group-as="URLs"/>
      <assembly named="notes"/>
    </model>
  </define-assembly>
  
  <define-field name="person-id" group-as="person-identifiers">
    <flag name="type"/>
    <formal-name>Personal Identifier</formal-name>
    <description>An identifier for a person (such as an ORCID) using a designated scheme.</description>
  </define-field>
  
  <define-field name="org-id" group-as="organization-identifiers">
    <flag name="type"/>
    <formal-name>Organization Identifier</formal-name>
    <description>An identifier for an organization using a designated scheme.</description>
  </define-field>
  
  <define-assembly name="hlink" group-as="hashed-links" show-docs="xml json">
    <flag name="href" datatype="anyURI" required="yes"/>
    <flag name="rel"  datatype="NCName"/>
    <flag name="media-type"/>
    <formal-name>Hashed link</formal-name>
    <description>A pointer to an external document with optional hash for verification</description>
    <remarks>
      <p>This is different from unstructured <code>link</code>, which makes no provision for a hash or formal title. It is also different from the element of the same name once proposed for HTML.</p>
    </remarks>
    <model>
      <field  named="title"/>
      <fields named="hash" group-as="hashes"/>
    </model>
  </define-assembly>
  
  <define-flag name="rel" datatype="NCName" show-docs="xml json">
    <formal-name>Relation</formal-name>
    <description>Purpose of the link</description>
  </define-flag>
  
  <define-flag name="media-type" datatype="string" show-docs="xml json">
    <formal-name>Media type</formal-name>
    <description>Describes the media or MIME type of a linked resource</description>
  </define-flag>
  
  <define-field name="person-name">
    <formal-name>Person Name</formal-name>
    <description>Full (legal) name of an individual</description>
  </define-field>
  
  <define-field name="org-name">
    <formal-name>Organization Name</formal-name>
    <description>Full (legal) name of an organization</description>
    <remarks>
      <p>Only when this element is used directly within <code>org</code> can it be accepted of the name of the thing to which it is attached. This element may also be used directly on <code>person</code> to name an affiliated organization.</p>
      <p><code>href</code> can be used to provide external links or internal links to other elements. The sibling <code>org-id</code> element
        (similarly for <em>affiliated</em> organizations) can also be used to link (for example to organizations listed elsewhere as parties.)</p>
    </remarks>
  </define-field>
  
  <define-field name="full-name" as="mixed">
    <formal-name>Full Name</formal-name>
    <description>The complete (legal) name of an entity or role</description>
  </define-field>
  
  
  <define-field name="short-name">
    <formal-name>short-name</formal-name>
    <description>A common name, short name or acronym</description>
    <remarks>
      <p>This element is not expected to be used to identify individual persons, but rather an
        organization or system.</p>
    </remarks>
  </define-field>

  <define-assembly name="address">
    <formal-name>Address</formal-name>
    <description>A postal address</description>
    <model>
      <fields named="addr-line" group-as="postal-address"/>
      <field  named="city"/>
      <field  named="state"/>
      <field  named="postal-code"/>
      <field  named="country"/>
      <!-- More address stuff -->
    </model>
  </define-assembly>


  <define-field name="addr-line" group-as="postal-address">
    <formal-name>Address line</formal-name>
    <description>A single line of an address</description>
  </define-field>

  <define-field name="city">
    <formal-name>City</formal-name>
    <description>City, town or geographical region for mailing address</description>
  </define-field>

  <define-field name="state">
    <formal-name>State</formal-name>
    <description>State, province or analogous geographical region for mailing address</description>
  </define-field>

  <define-field name="postal-code">
    <formal-name>Postal Code</formal-name>
    <description>Postal or ZIP code for mailing address</description>
  </define-field>

  <define-field name="country">
    <formal-name>Country</formal-name>
    <description>Country for mailing address</description>
  </define-field>

  <define-field name="email" group-as="email-addresses">
    <formal-name>Email</formal-name>
    <description>Email address</description>
  </define-field>

  <define-field name="phone" group-as="telephone-numbers">
    <formal-name>Telephone</formal-name>
    <description>Contact number by telephone</description>
  </define-field>

  <define-field name="url" group-as="URLs">
    <formal-name>URL</formal-name>
    <description>URL for web site or Internet presence</description>
  </define-field>

  <define-assembly name="notes">
    <formal-name>Notes</formal-name>
    <description>Any notes with further information</description>
    <model>
      <prose/>
    </model>
  </define-assembly>

  <define-field name="desc">
    <formal-name>Description</formal-name>
    <description>A short description</description>
  </define-field>
  
  <define-assembly name="resource" group-as="resources">
    <flag name="type"/>
    <flag name="media-type"/>
    <formal-name>Resource</formal-name>
    <description>A resource to inform or authenticate the present document.</description>
    <remarks>
      <p>Typically this information item describes and points to a mirror or other (authoritative or
        informative) copy of a document, or of a resouce helpful (necessary) for interpreting it,
        such as its metaschema or documentation. It may offer a (persistent) link to a
        <q>best available</q> version, or to an outdated version, as indicated by its
        <code>rel</code>.</p>
    </remarks>
    <model>
      <field    named="title"/>
      <fields   named="author" group-as="authors"/>
      <field    named="publication-date"/>
      <field    named="version"/>
      <fields   named="doc-id" group-as="document-identifiers"/>
      <fields   named="prop"   group-as="properties"/>
      <fields   named="hlink"  group-as="hashed-links"/>
      <assembly named="notes"/>
    </model>
  </define-assembly>

  <define-field name="hash" group-as="hashes">
    <flag name="algorithm"/>
    <formal-name>Hash</formal-name>
    <description>A document hash or other value subject to cryptographic authentication</description>
    <remarks>
      <p>When appearing as part of a resource (data object), the hash should apply to the referenced object.</p>
    </remarks>
  </define-field>
  
  
  <define-flag name="algorithm" datatype="string">
    <formal-name>Hash algorithm</formal-name>
    <description>Method by which a hash is derived</description>
    <remarks><p>One of the following is recognized: MD5, SHA-1, SHA-224, SHA-256, SHA-384, SHA-512, RIPEMD-160. See <a href="https://www.w3.org/TR/xmlsec-algorithms/#digest-method">XML Security Algorithm Cross-Reference</a> (W3C, April 2013) for more information.</p></remarks>
  </define-flag>
  
  <define-assembly name="role" group-as="roles">
    <flag name="id" datatype="ID" required="yes"/>
    <formal-name>Role</formal-name>
    <description>Defining a role to be assigned to a party or agent</description>
    <remarks>
      <p>Permissible values to be determined closer to the application (e.g. by a receiving
        authority).</p>
    </remarks>
    <model>
      <field named="title"/>
      <field named="short-name"/>
      <field named="desc"/>
    </model>
  </define-assembly>
  
  <define-flag name="href" datatype="anyURI">
    <formal-name>Hypertext reference</formal-name>
    <description>A relative or absolute URI indicating a resource available on the Internet.</description>
  </define-flag>


  <define-assembly name="extra-meta">
    <formal-name>Extra metadata</formal-name>
    <description>Container for (system-defined) metadata</description>
    <model>
      <choice>
        <assemblies named="meta-group" group-as="metadata-groups"/>
        <fields named="meta" group-as="metadata-fields"/>
      </choice>
      <assembly named="notes"/>
    </model>
  </define-assembly>
  
  <define-assembly name="meta-group" group-as="metadata-groups">
    <flag name="term"/>
    <flag name="type"/>
    <formal-name>Metadata group</formal-name>
    <description>Custom- or application-defined annotated metadata.</description>
    <model>
      <fields     named="meta"       group-as="metadata-fields"/>
      <assemblies named="meta-group" group-as="metadata-groups"/>
      <assembly   named="notes"/>
    </model>
  </define-assembly>
  
  <define-field name="meta" group-as="metadata-fields">
    <flag name="term"/>
    <flag name="type"/>
    <formal-name>Metadata field value</formal-name>
    <description>Any customized or specialized metadata value.</description>
  </define-field>
  
  <define-flag name="term" datatype="string">
    <formal-name>Metadata term</formal-name>
    <description>A classification (according to any schema or taxonomy) of a metadata value or set of values.</description>
  </define-flag>
  
  <define-flag name="id" datatype="ID">
    <formal-name>Identifier</formal-name>
    <description>A unique identifier</description>
  </define-flag>
  
  <define-flag name="role-id" datatype="IDREFS">
    <formal-name>Role identifier</formal-name>
    <description>References a <code>role</code> element defined in metadata.</description>
  </define-flag>

  <!--<define-assembly name="preparation">
    <formal-name>Preparation</formal-name>
    <description>Naming organizations playing roles in the preparation.</description>
    <remarks>
      <p>May be used in place of or in addition to <code>history</code>.</p>
      <p>Values for <code>role</code> may include "prepared-by", "prepared-for" etc.</p>
    </remarks>
    <model>
      <assemblies group-as="organizations" named="organization"/>
    </model>
  </define-assembly>

  <define-assembly name="attachment">
    <flag name="href"/>
    <formal-name>Attachment</formal-name>
    <description>File attachment: ancillary information kept in a separate file.</description>
    <model>
      <field    named="title"/>
      <field    named="desc"/>
      <fields   named="doc-id" group-as="document-identifiers"/>
      <fields   named="pub-id" group-as="publication-identifiers"/>
      <assembly named="file"/>
      <assembly named="notes"/>
      <assemblies named="meta-group" group-as="meta-groups"/>
    </model>
  </define-assembly>
-->
  <!--<define-assembly name="file">
    <formal-name>File</formal-name>
    <description>Information about an attached file.</description>
    <model>
      <field named="format"/>
      <field named="timestamp"/>
      <field named="url">
        <description>When describing an attachment this element may be used to indicate
          an original or reference version.</description>
      </field>

    </model>
  </define-assembly>-->
  
  <!--<define-field name="format">
    <formal-name>Format</formal-name>
    <description>Describes a file format or MIME type.</description>
  </define-field>

  <define-field name="timestamp">
    <formal-name>Timestamp</formal-name>
    <description>A timestamp on a file, offered as corroborating information regarding a file attachment.</description>
  </define-field>
  
  <define-assembly name="system">
    <formal-name>System</formal-name>
    <description>A description of the system for which this specification is intended</description>
    <model>
      <field named="full-name"/>
      <field named="short-name"/>
      <field named="system-id"/>
      <field named="desc"/>
      <assembly named="notes"/> 
      <assemblies named="meta-group" group-as="metadata-groups"/>
    </model>
  </define-assembly>
  
  <define-field name="system-id">
    <flag name="type"/>
    <formal-name>System ID</formal-name>
    <description>A unique identifier for the system</description>
  </define-field>

  
  -->
  

</METASCHEMA>
